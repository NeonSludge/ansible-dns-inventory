version: '3.9'

x-logging: &default-local
  options:
    max-size: "30M"
    max-file: "5"
    labels: "development"
  driver: "json-file"

x-variables:
  multitool_settings: &multitool_settings
    container_name: multitool
    image: wbitt/network-multitool
    volumes:
      - ../:/app
    networks:
      public:
        ipv4_address: 172.38.0.250
  flag_initial_cluster_token: &flag_initial_cluster_token '--initial-cluster-token=mys3cr3ttok3n'
  common_settings: &common_settings
      image: quay.io/coreos/etcd:v3.5.9
      profiles: ["etcd"]
      entrypoint: /usr/local/bin/etcd
      ports:
          - 2379

networks:
  public:
    driver: bridge
    ipam:
      config:
        - subnet: 172.38.0.0/24
          gateway: 172.38.0.1

# volumes:
#   postgresql-data:
#     name: pdns-postgresql-data
#     driver: local
#   pda-data:
#     name: pdns-pda-data
#     driver: local

services:
  dns-server:
    platform: linux/amd64
    container_name: dns-server
    build:
      context: .
      dockerfile: Dockerfile.bind9
    profiles: ["dns"]
    image: local-bind9-server:1.0
    restart: always
    logging: *default-local
    volumes:
      - ./config/dns/named.conf.options:/etc/bind/named.conf.options
      - ./config/dns/named.conf.local:/etc/bind/named.conf.local
      - ./config/dns/ansible-dns-inventory.infra.local:/etc/bind/zones/ansible-dns-inventory.infra.local
    networks:
      public:
        ipv4_address: 172.38.0.5

  multitool-dns:
    <<: *multitool_settings
    profiles: ["dns", "tools"]
    environment:
      - HTTP_PORT=1180 
      - HTTPS_PORT=11443
      - ADI_CONFIG_FILE=/app/docker/config/inventory/ansible-dns-inventory.yaml

  multitool-etcd:
    <<: *multitool_settings
    profiles: ["etcd", "tools"]
    environment:
      - HTTP_PORT=1180 
      - HTTPS_PORT=11443
      - ADI_CONFIG_FILE=/app/docker/config/inventory/ansible-etcd-inventory.yaml


  etcd-1:
      <<: *common_settings
      container_name: etcd-1
      logging: *default-local
      command:
          - '--name=etcd-1'
          - '--initial-advertise-peer-urls=http://etcd-1:2380'
          - '--listen-peer-urls=http://0.0.0.0:2380'
          - '--listen-client-urls=http://0.0.0.0:2379'
          - '--advertise-client-urls=http://etcd-1:2379'
          - '--heartbeat-interval=250'
          - '--election-timeout=1250'
          - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
          - '--initial-cluster-state=new'
          - *flag_initial_cluster_token
      networks:
        public:
          ipv4_address: 172.38.0.8

  etcd-2:
      <<: *common_settings
      container_name: etcd-2
      logging: *default-local
      command:
          - '--name=etcd-2'
          - '--initial-advertise-peer-urls=http://etcd-2:2380'
          - '--listen-peer-urls=http://0.0.0.0:2380'
          - '--listen-client-urls=http://0.0.0.0:2379'
          - '--advertise-client-urls=http://etcd-2:2379'
          - '--heartbeat-interval=250'
          - '--election-timeout=1250'
          - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
          - '--initial-cluster-state=new'
          - *flag_initial_cluster_token
      networks:
        public:
          ipv4_address: 172.38.0.9

  etcd-3:
      <<: *common_settings
      container_name: etcd-3
      logging: *default-local
      command:
          - '--name=etcd-3'
          - '--initial-advertise-peer-urls=http://etcd-3:2380'
          - '--listen-peer-urls=http://0.0.0.0:2380'
          - '--listen-client-urls=http://0.0.0.0:2379'
          - '--advertise-client-urls=http://etcd-3:2379'
          - '--heartbeat-interval=250'
          - '--election-timeout=1250'
          - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
          - '--initial-cluster-state=new'
          - *flag_initial_cluster_token
      networks:
        public:
          ipv4_address: 172.38.0.10


# docker compose exec -it etcd-1 etcdctl --cluster=true endpoint health

